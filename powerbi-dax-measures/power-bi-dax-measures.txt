// Power BI DAX Measures Portfolio
// Advanced DAX formulas for business intelligence and data analytics
// By Sandeep Karmacharya

// ==========================================
// SALES PERFORMANCE MEASURES
// ==========================================

// 1. Total Sales
Total Sales = SUM(Sales[SalesAmount])

// 2. Year-to-Date Sales
YTD Sales = TOTALYTD([Total Sales], Calendar[Date])

// 3. Previous Year Sales
Previous Year Sales = CALCULATE([Total Sales], SAMEPERIODLASTYEAR(Calendar[Date]))

// 4. Sales Growth %
Sales Growth % = 
VAR CurrentSales = [Total Sales]
VAR PreviousSales = [Previous Year Sales]
RETURN
IF(
    PreviousSales <> 0,
    DIVIDE(CurrentSales - PreviousSales, PreviousSales),
    BLANK()
)

// 5. Running Total Sales
Running Total Sales = 
CALCULATE(
    [Total Sales],
    FILTER(
        ALL(Calendar[Date]),
        Calendar[Date] <= MAX(Calendar[Date])
    )
)

// ==========================================
// CUSTOMER ANALYTICS MEASURES
// ==========================================

// 6. Customer Count
Customer Count = DISTINCTCOUNT(Sales[CustomerID])

// 7. New Customers
New Customers = 
VAR CurrentPeriod = CALCULATE([Customer Count])
VAR PreviousPeriod = 
    CALCULATE(
        [Customer Count],
        DATEADD(Calendar[Date], -1, YEAR)
    )
RETURN
CurrentPeriod - PreviousPeriod

// 8. Customer Lifetime Value
Customer LTV = 
DIVIDE(
    [Total Sales],
    [Customer Count]
)

// 9. Average Order Value
Average Order Value = 
DIVIDE(
    [Total Sales],
    DISTINCTCOUNT(Sales[OrderID])
)

// 10. Customer Retention Rate
Customer Retention Rate = 
VAR CurrentCustomers = 
    CALCULATE(
        DISTINCTCOUNT(Sales[CustomerID]),
        FILTER(
            Sales,
            Sales[Date] >= STARTOFMONTH(TODAY()) &&
            Sales[Date] <= ENDOFMONTH(TODAY())
        )
    )
VAR PreviousCustomers = 
    CALCULATE(
        DISTINCTCOUNT(Sales[CustomerID]),
        FILTER(
            Sales,
            Sales[Date] >= STARTOFMONTH(DATEADD(TODAY(), -1, MONTH)) &&
            Sales[Date] <= ENDOFMONTH(DATEADD(TODAY(), -1, MONTH))
        )
    )
VAR ReturningCustomers = 
    CALCULATE(
        DISTINCTCOUNT(Sales[CustomerID]),
        FILTER(
            Sales,
            Sales[CustomerID] IN VALUES(Sales[CustomerID]) &&
            Sales[Date] >= STARTOFMONTH(TODAY()) &&
            Sales[Date] <= ENDOFMONTH(TODAY())
        )
    )
RETURN
DIVIDE(ReturningCustomers, PreviousCustomers)

// ==========================================
// FINANCIAL KPI MEASURES
// ==========================================

// 11. Gross Profit
Gross Profit = 
SUMX(
    Sales,
    Sales[SalesAmount] - Sales[CostAmount]
)

// 12. Gross Margin %
Gross Margin % = 
DIVIDE(
    [Gross Profit],
    [Total Sales]
)

// 13. Revenue per Employee
Revenue per Employee = 
DIVIDE(
    [Total Sales],
    DISTINCTCOUNT(Employees[EmployeeID])
)

// 14. Budget Variance
Budget Variance = 
[Total Sales] - SUM(Budget[BudgetAmount])

// 15. Budget Variance %
Budget Variance % = 
DIVIDE(
    [Budget Variance],
    SUM(Budget[BudgetAmount])
)

// ==========================================
// TIME INTELLIGENCE MEASURES
// ==========================================

// 16. Month-over-Month Growth
MoM Growth % = 
VAR CurrentMonth = [Total Sales]
VAR PreviousMonth = 
    CALCULATE(
        [Total Sales],
        DATEADD(Calendar[Date], -1, MONTH)
    )
RETURN
DIVIDE(
    CurrentMonth - PreviousMonth,
    PreviousMonth
)

// 17. Quarter-to-Date Sales
QTD Sales = TOTALQTD([Total Sales], Calendar[Date])

// 18. 12-Month Rolling Average
12M Rolling Avg = 
AVERAGEX(
    DATESINPERIOD(
        Calendar[Date],
        LASTDATE(Calendar[Date]),
        -12,
        MONTH
    ),
    [Total Sales]
)

// 19. Days Since Last Sale
Days Since Last Sale = 
VAR LastSaleDate = 
    CALCULATE(
        MAX(Sales[Date]),
        ALL(Sales)
    )
RETURN
DATEDIFF(LastSaleDate, TODAY(), DAY)

// ==========================================
// PRODUCT PERFORMANCE MEASURES
// ==========================================

// 20. Top 10 Products by Sales
Top 10 Products = 
IF(
    RANKX(
        ALL(Products[ProductName]),
        [Total Sales],
        ,
        DESC
    ) <= 10,
    [Total Sales],
    BLANK()
)

// 21. Product Contribution %
Product Contribution % = 
DIVIDE(
    [Total Sales],
    CALCULATE(
        [Total Sales],
        ALL(Products)
    )
)

// 22. Inventory Turnover
Inventory Turnover = 
DIVIDE(
    SUM(Sales[CostAmount]),
    AVERAGE(Inventory[InventoryValue])
)

// ==========================================
// ADVANCED ANALYTICS MEASURES
// ==========================================

// 23. Pareto Analysis (80/20 Rule)
Pareto Analysis = 
VAR CumulativePercentage = 
    DIVIDE(
        CALCULATE(
            [Total Sales],
            FILTER(
                ALL(Products[ProductName]),
                RANKX(
                    ALL(Products[ProductName]),
                    [Total Sales],
                    ,
                    DESC
                ) <= RANKX(
                    ALL(Products[ProductName]),
                    [Total Sales],
                    ,
                    DESC
                )
            )
        ),
        CALCULATE(
            [Total Sales],
            ALL(Products)
        )
    )
RETURN
IF(CumulativePercentage <= 0.8, "Top 80%", "Bottom 20%")

// 24. Forecast Accuracy
Forecast Accuracy = 
1 - ABS(
    DIVIDE(
        [Total Sales] - SUM(Forecast[ForecastAmount]),
        [Total Sales]
    )
)

// 25. Seasonal Index
Seasonal Index = 
VAR CurrentMonthAvg = 
    CALCULATE(
        AVERAGE(Sales[SalesAmount]),
        FILTER(
            ALL(Calendar),
            MONTH(Calendar[Date]) = MONTH(MAX(Calendar[Date]))
        )
    )
VAR YearlyAvg = 
    CALCULATE(
        AVERAGE(Sales[SalesAmount]),
        ALL(Calendar)
    )
RETURN
DIVIDE(CurrentMonthAvg, YearlyAvg)

// ==========================================
// CONDITIONAL FORMATTING MEASURES
// ==========================================

// 26. Sales Performance Indicator
Sales Performance Indicator = 
SWITCH(
    TRUE(),
    [Sales Growth %] >= 0.15, "Excellent",
    [Sales Growth %] >= 0.05, "Good",
    [Sales Growth %] >= 0, "Average",
    "Below Target"
)

// 27. Traffic Light KPI
Traffic Light KPI = 
SWITCH(
    TRUE(),
    [Budget Variance %] >= 0.1, 1,  // Green
    [Budget Variance %] >= -0.05, 2, // Yellow
    3  // Red
)

// ==========================================
// UTILITY MEASURES
// ==========================================

// 28. Dynamic Title
Dynamic Title = 
"Sales Performance for " & 
IF(
    ISFILTERED(Calendar[Year]),
    SELECTEDVALUE(Calendar[Year]),
    "All Years"
) & 
IF(
    ISFILTERED(Calendar[MonthName]),
    " - " & SELECTEDVALUE(Calendar[MonthName]),
    ""
)

// 29. Data Refresh Timestamp
Data Refresh Time = 
"Last Updated: " & FORMAT(NOW(), "DD/MM/YYYY HH:MM")

// 30. Record Count
Record Count = COUNTROWS(Sales)

// ==========================================
// NOTES AND COMMENTS
// ==========================================
/*
These DAX measures demonstrate:
1. Time intelligence functions (YTD, QTD, SAMEPERIODLASTYEAR)
2. Statistical functions (AVERAGE, STDEV, PERCENTILE)
3. Ranking and comparative analysis (RANKX, TOPN)
4. Advanced filtering and context manipulation
5. Financial and business KPI calculations
6. Conditional logic and dynamic formatting
7. Performance optimization techniques
8. Best practices for measure organization

Usage scenarios:
- Executive dashboards
- Sales performance tracking
- Financial reporting
- Customer analytics
- Product performance analysis
- Forecasting and planning
*/
